#!/bin/bash
# - nr_task
# - runtime
# - build_kconfig
# - target

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/reproduce-log.sh

## Build linux kernel

: "${runtime:=300}"
: "${build_kconfig:=defconfig}"

[ -n "$target" ] || target=vmlinux

parallel=$((nr_task / nr_instances))

run_kbuild()
{
	start_time=$(date +%s)
	iterations=0
	while true; do
		log_cmd make mrproper || die "make mrproper failed"
		log_cmd make $build_kconfig || die "make $build_kconfig failed"

		log_cmd scripts/config --file .config --enable CONFIG_TRIM_UNUSED_KSYMS

		echo "start time: $(date +%s.%N)"
		{ TIMEFORMAT=$'\nreal: %Rs\nuser: %Us\nsys: %Ss'; time { make -j $parallel $target > /dev/null; }; } 2>&1 || die "make -j $parallel $target failed"
		echo "end time: $(date +%s.%N)"
		iterations=$((iterations + 1))
		now=$(date +%s)
		[ $((now - start_time)) -gt "$runtime" ] && break
	done
	echo "iterations: $iterations"
	echo "runtime: $((now - start_time))"
}

linux_src="$BENCHMARK_ROOT/kbuild/linux"
[ -d "$linux_src" ] || die "no kernel source code in $BENCHMARK_ROOT/kbuild/linux"

if [ -z "$kbuild_work_dirs" ]; then
	kbuild_work_dirs="$BENCHMARK_ROOT/kbuild"
	log_cmd mkdir -p "$kbuild_work_dirs"
	iwdir="$kbuild_work_dirs/$instance_id"
	log_cmd rm -rf "$iwdir"
	log_cmd cp -a "$linux_src" "$iwdir"
fi

kbuild_tmp_dir="$TMP/kbuild-$instance_id"
mkdir -p $kbuild_tmp_dir

i=0
for wdir in $kbuild_work_dirs; do
	(
		iwdir="$wdir/$instance_id"
		log_eval cd "$iwdir"
		run_kbuild > "$kbuild_tmp_dir/kbuild.$i"
	) &
	i=$((i+1))
done

wait

cat "$kbuild_tmp_dir"/kbuild.*
